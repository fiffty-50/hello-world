.TH "experimental::AEntry" 3 "Sat Dec 26 2020" "openPilotLog" \" -*- nroff -*-
.ad l
.nh
.SH NAME
experimental::AEntry \- The Entry class encapsulates table metadata(table name, row id) and data for new and existing entries in the database to operate on\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <aentry\&.h>\fP
.PP
Inherited by \fBexperimental::AAircraftEntry\fP, \fBexperimental::AFlightEntry\fP, \fBexperimental::APilotEntry\fP, and \fBexperimental::ATailEntry\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAEntry\fP (const \fBAEntry\fP &)=default"
.br
.ti -1c
.RI "\fBAEntry\fP & \fBoperator=\fP (const \fBAEntry\fP &)=default"
.br
.ti -1c
.RI "\fBAEntry\fP (\fBDataPosition\fP position_)"
.br
.ti -1c
.RI "\fBAEntry\fP (TableData table_data)"
.br
.ti -1c
.RI "\fBAEntry\fP (\fBDataPosition\fP position_, TableData table_data)"
.br
.ti -1c
.RI "void \fBsetData\fP (TableData table_data)"
.br
.ti -1c
.RI "void \fBsetPosition\fP (\fBDataPosition\fP position_)"
.br
.ti -1c
.RI "const \fBDataPosition\fP & \fBgetPosition\fP ()"
.br
.ti -1c
.RI "const TableData & \fBgetData\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "TableData \fBtableData\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBDataPosition\fP \fBposition\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The Entry class encapsulates table metadata(table name, row id) and data for new and existing entries in the database to operate on\&. 

[G]: Define what data is public and what not\&. For objects such as \fBDataPosition\fP which are consumable its no biggy\&. Are entries the same? If so we could avoid getters and setters [F]: In the way we are using the entries atm, we do access and edit the TableData quite frequently\&. Maybe the data could be public, but the position private? Except for creating a new entry, the position should never really be changed\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for openPilotLog from the source code\&.
